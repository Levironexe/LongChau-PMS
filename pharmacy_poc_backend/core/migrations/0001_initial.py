# Generated by Django 5.2.4 on 2025-07-29 08:31

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cashier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('hire_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('register_number', models.CharField(blank=True, max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('date_of_birth', models.DateField()),
                ('address', models.TextField()),
                ('registration_date', models.DateField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='HealthSupplement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('manufacturer', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('supplement_type', models.CharField(max_length=100)),
                ('dosage_instructions', models.TextField()),
                ('ingredients', models.JSONField(default=list)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('manufacturer', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device_category', models.CharField(max_length=100)),
                ('warranty_period_months', models.PositiveIntegerField(default=12)),
                ('requires_training', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('product_type', models.CharField(choices=[('medicine', 'Medicine'), ('prescription_medicine', 'Prescription Medicine'), ('otc_medicine', 'Over-the-Counter Medicine')], default='medicine', max_length=30)),
                ('manufacturer', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('requires_prescription', models.BooleanField(default=False)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('active_ingredient', models.CharField(max_length=200)),
                ('dosage_form', models.CharField(max_length=100)),
                ('strength', models.CharField(max_length=100)),
                ('therapeutic_class', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Pharmacist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('hire_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('specialization', models.CharField(blank=True, max_length=100)),
                ('can_validate_prescriptions', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PharmacyBranch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductFactory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factory_name', models.CharField(max_length=100, unique=True)),
                ('supported_product_types', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='VIPCustomer',
            fields=[
                ('customer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.customer')),
                ('membership_level', models.CharField(default='Gold', max_length=20)),
                ('discount_rate', models.DecimalField(decimal_places=2, default=10.0, max_digits=5)),
                ('membership_start_date', models.DateField(auto_now_add=True)),
            ],
            bases=('core.customer',),
        ),
        migrations.CreateModel(
            name='InStoreOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=20, unique=True)),
                ('order_type', models.CharField(default='in_store', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('notes', models.TextField(blank=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instore_orders', to='core.customer')),
                ('served_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='served_orders', to='core.cashier')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_instore_orders', to='core.pharmacist')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.pharmacybranch')),
            ],
        ),
        migrations.CreateModel(
            name='LoyaltyPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.PositiveIntegerField(default=0)),
                ('earned_date', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateField()),
                ('transaction_reference', models.CharField(blank=True, max_length=100)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loyalty_points', to='core.customer')),
            ],
        ),
        migrations.CreateModel(
            name='OverTheCounterMedicine',
            fields=[
                ('medicine_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.medicine')),
                ('age_restriction', models.PositiveIntegerField(default=0)),
                ('max_quantity_per_purchase', models.PositiveIntegerField(default=10)),
            ],
            bases=('core.medicine',),
        ),
        migrations.CreateModel(
            name='PrescriptionMedicine',
            fields=[
                ('medicine_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.medicine')),
                ('controlled_substance', models.BooleanField(default=False)),
                ('prescription_required', models.BooleanField(default=True)),
            ],
            bases=('core.medicine',),
        ),
        migrations.CreateModel(
            name='InventoryRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_stock', models.PositiveIntegerField(default=0)),
                ('minimum_stock', models.PositiveIntegerField(default=10)),
                ('reorder_point', models.PositiveIntegerField(default=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.medicine')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_records', to='core.pharmacybranch')),
            ],
            options={
                'unique_together': {('branch', 'product')},
            },
        ),
        migrations.CreateModel(
            name='MedicineDatabase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug_interactions', models.JSONField(default=list)),
                ('contraindications', models.JSONField(default=list)),
                ('side_effects', models.JSONField(default=list)),
                ('storage_conditions', models.TextField()),
                ('shelf_life_months', models.PositiveIntegerField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('medicine', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='database_info', to='core.medicine')),
            ],
        ),
        migrations.CreateModel(
            name='OnlineOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=20, unique=True)),
                ('order_type', models.CharField(default='online', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('notes', models.TextField(blank=True)),
                ('delivery_address', models.TextField()),
                ('delivery_instructions', models.TextField(blank=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='online_orders', to='core.customer')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_online_orders', to='core.pharmacist')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.pharmacybranch')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('stock_in', 'Stock In'), ('stock_out', 'Stock Out'), ('adjustment', 'Adjustment'), ('expired', 'Expired')], max_length=20)),
                ('quantity', models.IntegerField()),
                ('previous_stock', models.PositiveIntegerField()),
                ('new_stock', models.PositiveIntegerField()),
                ('transaction_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('inventory_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.inventoryrecord')),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.pharmacist')),
            ],
        ),
        migrations.AddField(
            model_name='pharmacist',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pharmacists', to='core.pharmacybranch'),
        ),
        migrations.CreateModel(
            name='InventoryManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('hire_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('can_approve_orders', models.BooleanField(default=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_managers', to='core.pharmacybranch')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allergies', models.TextField(blank=True)),
                ('medical_conditions', models.TextField(blank=True)),
                ('emergency_contact_name', models.CharField(max_length=100)),
                ('emergency_contact_phone', models.CharField(max_length=20)),
                ('marketing_consent', models.BooleanField(default=False)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='core.customer')),
                ('preferred_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.pharmacybranch')),
            ],
        ),
        migrations.AddField(
            model_name='cashier',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cashiers', to='core.pharmacybranch'),
        ),
        migrations.CreateModel(
            name='BranchManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('hire_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managers', to='core.pharmacybranch')),
                ('managed_branches', models.ManyToManyField(related_name='additional_managers', to='core.pharmacybranch')),
            ],
        ),
        migrations.CreateModel(
            name='BranchConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_prescriptions_per_day', models.PositiveIntegerField(default=100)),
                ('operating_hours', models.JSONField(default=dict)),
                ('emergency_contact', models.CharField(max_length=20)),
                ('branch', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuration', to='core.pharmacybranch')),
            ],
        ),
        migrations.CreateModel(
            name='PharmacyTechnician',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('hire_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('certification_level', models.CharField(max_length=50)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='technicians', to='core.pharmacybranch')),
                ('supervised_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.pharmacist')),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prescription_number', models.CharField(max_length=30, unique=True)),
                ('patient_name', models.CharField(max_length=200)),
                ('patient_dob', models.DateField()),
                ('doctor_name', models.CharField(max_length=200)),
                ('doctor_license', models.CharField(max_length=100)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('validated', 'Validated'), ('dispensed', 'Dispensed'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='submitted', max_length=20)),
                ('validation_date', models.DateTimeField(blank=True, null=True)),
                ('validation_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='core.customer')),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_prescriptions', to='core.pharmacist')),
            ],
        ),
        migrations.CreateModel(
            name='PrescriptionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dosage', models.CharField(max_length=100)),
                ('frequency', models.CharField(max_length=100)),
                ('duration', models.CharField(max_length=100)),
                ('quantity_prescribed', models.PositiveIntegerField()),
                ('quantity_dispensed', models.PositiveIntegerField(default=0)),
                ('instructions', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.medicine')),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.prescription')),
            ],
        ),
        migrations.CreateModel(
            name='PrescriptionOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=20, unique=True)),
                ('order_type', models.CharField(default='prescription', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('notes', models.TextField(blank=True)),
                ('validation_date', models.DateTimeField(blank=True, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.pharmacybranch')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_prescription_orders', to='core.pharmacist')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescription_orders', to='core.customer')),
                ('prescription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.prescription')),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_prescription_orders', to='core.pharmacist')),
            ],
        ),
        migrations.CreateModel(
            name='PickUpDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_type', models.CharField(choices=[('pickup', 'Pickup Delivery')], default='pickup', max_length=20)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('ready', 'Ready for Pickup'), ('delivered', 'Delivered'), ('failed', 'Failed')], default='scheduled', max_length=20)),
                ('scheduled_date', models.DateTimeField()),
                ('delivery_address', models.TextField()),
                ('delivery_instructions', models.TextField(blank=True)),
                ('delivered_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('pickup_location', models.CharField(max_length=200)),
                ('customer_notified', models.BooleanField(default=False)),
                ('assigned_staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.pharmacist')),
                ('instore_order', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pickup_delivery', to='core.instoreorder')),
                ('online_order', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pickup_delivery', to='core.onlineorder')),
                ('prescription_order', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pickup_delivery', to='core.prescriptionorder')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('instore_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.instoreorder')),
                ('online_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.onlineorder')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.medicine')),
                ('prescription_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.prescriptionorder')),
            ],
        ),
        migrations.CreateModel(
            name='HomeDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_type', models.CharField(choices=[('home', 'Home Delivery')], default='home', max_length=20)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_transit', 'In Transit'), ('delivered', 'Delivered'), ('failed', 'Failed')], default='scheduled', max_length=20)),
                ('scheduled_date', models.DateTimeField()),
                ('delivery_address', models.TextField()),
                ('delivery_instructions', models.TextField(blank=True)),
                ('delivered_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('delivery_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('estimated_delivery_time', models.DurationField(blank=True, null=True)),
                ('gps_coordinates', models.CharField(blank=True, max_length=100)),
                ('instore_order', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='home_delivery', to='core.instoreorder')),
                ('online_order', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='home_delivery', to='core.onlineorder')),
                ('assigned_staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.pharmacist')),
                ('prescription_order', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='home_delivery', to='core.prescriptionorder')),
            ],
        ),
        migrations.CreateModel(
            name='ReportGenerator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_name', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('sales', 'Sales Report'), ('inventory', 'Inventory Report'), ('prescription', 'Prescription Report'), ('staff_performance', 'Staff Performance Report')], max_length=30)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('report_data', models.JSONField(default=dict)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='core.pharmacybranch')),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.pharmacist')),
            ],
        ),
    ]
